
#
#   3.0 roadmap
#


BUGS
- the historical graph doesnt stop on the same date as current year
- should probably just not show the table if there is no data
- the email backup of the database should have a subject other than "SUBJECT" and the name of the backup should include the date in it.
- validate all user input... dates are dates, numbers are numbers, that sort of thing
    -- edit run input

REFACTOR
- each row in the table should have a unique id
    -- this would make it easier to expand to multiple users
- the confirmation of data entry could look/work a little nicer than it does
    -- this could live in it's own class and could exist as a standard way to confirm user input
- put the sql statements into their own files and import them somehow.. i feel like that would be somewhat easier to maintain/edit.. at least for the creation of tables
- stats should display in a more visually pleasing way

FEATURES
- monthly stats
    -- total miles this month
    -- total runs this month
    -- avg miles per month
    -- avg runs per month
- it would be cool if i type "graph bar" for example, it would immediately go into that menu, or like run defaults grand
- some sort of tab complete, it would be great if i could standardize that in the interactive menu

- the top level should be

    "Runs", "Stats", "Routes", "Shoes", "Graphs"
    "Config", "Backup", "About", "Back", "Exit"

    where runs expands into add/edit/show/delete/import
    stats expands into goals/yearly/monthly/weekly
        -- goals shows progress towards this year's goal
        -- yearly expands into the years
        -- monthly expands into the months
        -- weekly expands into the weeks
    routes expands to add/edit/show/delete
    shoes expands to add/show/retire/delete
    config expands to config menu
        -- can edit goal, stretch goal, backup email...
        -- these values would live in a database and override the config file
    backup expands to backup menu filesystem/email
        -- email --> sqlite, jsonfolder, csvfolder
        -- filesystem --> sqlite, jsonfolder, csvfolder
    about shows version info
        -- this will just come from a file
    slight reworking basically

- a script/command that populates the test database for various days
    -- prod --> test copy

- should have ability to record pain/difficulty after run scale of 1-10
    -- this should then color coat the graph

- i want the ability to do "historical" for every type of graph

- historical should allow a selector for which year (at first this will be redundant)

- graphs should also have a menu similar to the other stuff, right now it goes back to the main menu after selecting a graph

- there should be more "acceptable" answers for each choice
    -- ie: graphs --> (graph, graphs, chart, charts)
    --     all --> (all, list)
    --     stats --> (stat, stats, data, etc)
    -- this could be customizable via the configs

- should be able to pip install the module and run it very simply, no more downloading the repo and setting the python path... i don't know what's involved in this or if it works like i'm thinking..
    -- if i recall, there's a way to run python modules
    -- "python -m <module name>" something like that
    -- that would be an improvement over needing to have all of the code set up locally

- strech goals in the stats menu

- editable configuration, there should be a configuration database that overrides certain values from the config file

- saveable temperature for runs, heavily optional as i feel like this could get annoying to need to look up

- able to save images somehow of each route

- stats "as of" a certain day

- data should be able to back up every "X" days

- for bar graphs that dont have a date on the x axis, sort those from biggest to smallest

- put the day of the week as a column inside "all"

- edit runs when more than one run on a day

- approximate time of run, again heavily optional and probably save as military time?

- backup should be a main menu option as well

- import runs
    -- csv/json



<done bugs>
- if not connnected to the internet, the database backup, and any other call to the internet will fail, handle this gracefully

<done refactors>
- standardize the interactive menu so that i can use it in other projects
- call "super" in every place that we are manually binding the manager to the subclass
- actually, all menus should display in a more pleasing way, maybe battlemenu from pokemon inspiration, would be cool/overkill if this was customizable
- rename "runner" to "context manager" or "manager" or something like that
- all tables should have datatypes
- all inserts to tables should not rely on position alone in order to determine which values are being inserted

<done features>
- some sort of tree view so that I know where in the menu that i am
