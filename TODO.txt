<bugs>

- whitespace before and after commands should be ignored
- "routes" page has way too many decimal places

<features>

- it would be cool to be able to visually distinguish runs that occur on the same day as separate runs (in the graph)
- some way to indicate how many miles per pair of shoe
- some way to adjust/recalculate the stats dynamically (ie: if my goal was X, my avgs would change by Y)
- "routes" should be ordered by number of times run, and then also display the miles

<refactors>

- hold the routes in memory, there are several places that i look them up when the function is called
- update the example config, and the real configs locally
- unfortunately, it looks like for my modules to import correctly, i need to have 'src' one level down, at least if i am going to continue with that pattern

-----------------------------------------------------------------------------

<done bugs>

- when you enter a route name that the runner does not recognize, then it will immediately say "are you done recording runs" when i would like it to ask for the correct name of the run, or ask the user to enter a new run (or i guess just exit)
    -- this was a freebee fix through one of the refactors
- when you are in the routes menu, and do "show", once done it immediately takes you back to the main menu, should take you back to routes menu
    -- I also got this one for free through the refactor
- in the edit menu, there needs to be a "back/exit" button, right now it just accepts whatever input it is given as a date and mostly fails
- when deleting runs, it still says "deleted <full number of rows> rows" instead of the number it is actually deleting
- should cut the % in "all" down to 2 decimal places and then display "%"

<done features>

- i want to be able to graph how many of each type (lake, grand, etc) run that i've done, both bar graph and pie graph
- adding a new route should be a lot easier, no manually editing configs
- editing a run should be a lot easier than it is, no going in and manually updating the sql
- port the data from 2022 into the database
    -- once this is done i should be able to kill off the filesystem code entirely
- it would be nice to have the historical graph on the same window as the current year
- hovering over the bar on the graph should reveal the comment for that run
- maybe some automated export of the database

<done refactors>

- big refactor to the interactive code.. a lot more pluggable/modular
- split the reader writer up into different types (db, filesystem, etc)
- the graph functions should live in their own class
- we no longer really use fancy_print, and fancy_input could be re-worked
